<?php

/**
 * Basepaises
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $titulo
 * @property varchar $imagen
 * @property varchar $iso2
 * @property varchar $iso3
 * @property integer $codigo
 * @property varchar $cultura
 * @property boolean $activo
 * @property boolean $by_admin
 * @property integer $created_by
 * @property integer $updated_by
 * @property Doctrine_Collection $sfGuardUserBululu
 * @property Doctrine_Collection $comunidades
 * @property Doctrine_Collection $estados
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method varchar             getTitulo()            Returns the current record's "titulo" value
 * @method varchar             getImagen()            Returns the current record's "imagen" value
 * @method varchar             getIso2()              Returns the current record's "iso2" value
 * @method varchar             getIso3()              Returns the current record's "iso3" value
 * @method integer             getCodigo()            Returns the current record's "codigo" value
 * @method varchar             getCultura()           Returns the current record's "cultura" value
 * @method boolean             getActivo()            Returns the current record's "activo" value
 * @method boolean             getByAdmin()           Returns the current record's "by_admin" value
 * @method integer             getCreatedBy()         Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()         Returns the current record's "updated_by" value
 * @method Doctrine_Collection getSfGuardUserBululu() Returns the current record's "sfGuardUserBululu" collection
 * @method Doctrine_Collection getComunidades()       Returns the current record's "comunidades" collection
 * @method Doctrine_Collection getEstados()           Returns the current record's "estados" collection
 * @method paises              setId()                Sets the current record's "id" value
 * @method paises              setTitulo()            Sets the current record's "titulo" value
 * @method paises              setImagen()            Sets the current record's "imagen" value
 * @method paises              setIso2()              Sets the current record's "iso2" value
 * @method paises              setIso3()              Sets the current record's "iso3" value
 * @method paises              setCodigo()            Sets the current record's "codigo" value
 * @method paises              setCultura()           Sets the current record's "cultura" value
 * @method paises              setActivo()            Sets the current record's "activo" value
 * @method paises              setByAdmin()           Sets the current record's "by_admin" value
 * @method paises              setCreatedBy()         Sets the current record's "created_by" value
 * @method paises              setUpdatedBy()         Sets the current record's "updated_by" value
 * @method paises              setSfGuardUserBululu() Sets the current record's "sfGuardUserBululu" collection
 * @method paises              setComunidades()       Sets the current record's "comunidades" collection
 * @method paises              setEstados()           Sets the current record's "estados" collection
 * 
 * @package    venexter
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basepaises extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paises');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('titulo', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('imagen', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('iso2', 'varchar', 2, array(
             'type' => 'varchar',
             'length' => 2,
             ));
        $this->hasColumn('iso3', 'varchar', 3, array(
             'type' => 'varchar',
             'length' => 3,
             ));
        $this->hasColumn('codigo', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('cultura', 'varchar', 10, array(
             'type' => 'varchar',
             'length' => 10,
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('by_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('created_by', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('updated_by', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUserBululu', array(
             'local' => 'id',
             'foreign' => 'pais_id'));

        $this->hasMany('comunidades', array(
             'local' => 'id',
             'foreign' => 'pais_id'));

        $this->hasMany('estados', array(
             'local' => 'id',
             'foreign' => 'pais_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'titulo',
             ),
             'unique' => true,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}